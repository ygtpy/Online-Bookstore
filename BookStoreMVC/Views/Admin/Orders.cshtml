@{
    ViewData["Title"] = "Sipariş Yönetimi";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2>Sipariş Yönetimi</h2>
        <div class="btn-group" role="group">
            <button type="button" class="btn btn-outline-primary" onclick="filterOrders('all')">
                <i class="fas fa-list"></i> Tümü
            </button>
            <button type="button" class="btn btn-outline-warning" onclick="filterOrders('Pending')">
                <i class="fas fa-clock"></i> Bekleyenler
            </button>
            <button type="button" class="btn btn-outline-info" onclick="filterOrders('Processing')">
                <i class="fas fa-cogs"></i> İşlemde
            </button>
            <button type="button" class="btn btn-outline-success" onclick="filterOrders('Delivered')">
                <i class="fas fa-check"></i> Teslim Edilenler
            </button>
        </div>
    </div>

    <!-- Loading indicator -->
    <div id="loading" class="text-center">
        <div class="spinner-border text-primary" role="status">
            <span class="visually-hidden">Yükleniyor...</span>
        </div>
        <p>Siparişler yükleniyor...</p>
    </div>

    <!-- Orders container -->
    <div id="ordersContainer" style="display: none;">
        <div class="row" id="ordersGrid">
            <!-- Orders will be loaded here -->
        </div>

        <!-- Statistics -->
        <div class="row mt-4">
            <div class="col-12">
                <div class="card bg-light">
                    <div class="card-body">
                        <h5 class="card-title text-center mb-3">Sipariş İstatistikleri</h5>
                        <div class="row text-center" id="orderStats">
                            <!-- Stats will be loaded here -->
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- No orders message -->
    <div id="noOrders" class="card shadow" style="display: none;">
        <div class="card-body text-center py-5">
            <i class="fas fa-shopping-cart fa-5x text-muted mb-3"></i>
            <h3>Henüz sipariş bulunmuyor</h3>
            <p class="text-muted">Müşterilerden sipariş gelmeyi bekliyoruz.</p>
        </div>
    </div>
</div>

<!-- Order Detail Modal -->
<div class="modal fade" id="orderDetailModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Sipariş Detayları</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body" id="orderDetailContent">
                <!-- Order details will be loaded here -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Kapat</button>
                <div class="btn-group" role="group">
                    <button type="button" class="btn btn-warning" onclick="updateOrderStatus('Processing')">
                        <i class="fas fa-cogs"></i> İşleme Al
                    </button>
                    <button type="button" class="btn btn-info" onclick="updateOrderStatus('Shipped')">
                        <i class="fas fa-shipping-fast"></i> Kargola
                    </button>
                    <button type="button" class="btn btn-success" onclick="updateOrderStatus('Delivered')">
                        <i class="fas fa-check"></i> Teslim Et
                    </button>
                    <button type="button" class="btn btn-danger" onclick="updateOrderStatus('Cancelled')">
                        <i class="fas fa-times"></i> İptal Et
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let allOrders = [];
        let currentOrderId = null;

        $(document).ready(function() {
            loadOrders();
        });

        async function loadOrders() {
            try {
                const response = await fetch('@Url.Content("~/")../api/orders'.replace('../', 'https://localhost:7001/'));

                if (response.ok) {
                    allOrders = await response.json();
                    displayOrders(allOrders);
                    updateStatistics();
                    document.getElementById('loading').style.display = 'none';
                    document.getElementById('ordersContainer').style.display = 'block';
                } else {
                    throw new Error('API çağrısı başarısız');
                }
            } catch (error) {
                console.error('Error loading orders:', error);
                document.getElementById('loading').style.display = 'none';

                if (allOrders.length === 0) {
                    document.getElementById('noOrders').style.display = 'block';
                }
            }
        }

        function displayOrders(orders) {
            const container = document.getElementById('ordersGrid');

            if (orders.length === 0) {
                document.getElementById('ordersContainer').style.display = 'none';
                document.getElementById('noOrders').style.display = 'block';
                return;
            }

            document.getElementById('noOrders').style.display = 'none';

            container.innerHTML = orders.map(order => `
                <div class="col-lg-6 col-xl-4 mb-4">
                    <div class="card h-100 shadow order-card" data-status="${order.status}">
                        <div class="card-header d-flex justify-content-between align-items-center">
                            <h6 class="mb-0">Sipariş #${order.id}</h6>
                            <span class="badge ${getStatusBadgeClass(order.status)}">${getStatusText(order.status)}</span>
                        </div>
                        <div class="card-body">
                            <div class="mb-2">
                                <small class="text-muted">Müşteri:</small><br>
                                <strong>${order.user.firstName} ${order.user.lastName}</strong><br>
                                <small>${order.user.email}</small>
                            </div>

                            <div class="mb-2">
                                <small class="text-muted">Sipariş Tarihi:</small><br>
                                <span>${new Date(order.orderDate).toLocaleDateString('tr-TR')}</span>
                            </div>

                            <div class="mb-2">
                                <small class="text-muted">Ürün Sayısı:</small><br>
                                <span>${order.orderItems.length} ürün</span>
                            </div>

                            <div class="mb-3">
                                <small class="text-muted">Toplam Tutar:</small><br>
                                <h5 class="text-primary mb-0">${order.totalAmount.toLocaleString('tr-TR', {style: 'currency', currency: 'TRY'})}</h5>
                            </div>

                            <div class="d-grid gap-2">
                                <button class="btn btn-outline-primary" onclick="showOrderDetail(${order.id})">
                                    <i class="fas fa-eye"></i> Detayları Görüntüle
                                </button>
                                ${order.status === 'Pending' ? `
                                <div class="btn-group" role="group">
                                    <button class="btn btn-success btn-sm" onclick="quickUpdateStatus(${order.id}, 'Processing')">
                                        <i class="fas fa-cogs"></i> İşleme Al
                                    </button>
                                    <button class="btn btn-danger btn-sm" onclick="quickUpdateStatus(${order.id}, 'Cancelled')">
                                        <i class="fas fa-times"></i> İptal
                                    </button>
                                </div>
                                ` : ''}
                            </div>
                        </div>
                    </div>
                </div>
            `).join('');
        }

        function filterOrders(status) {
            const filteredOrders = status === 'all' ? allOrders : allOrders.filter(order => order.status === status);
            displayOrders(filteredOrders);

            // Update active button
            document.querySelectorAll('.btn-group .btn').forEach(btn => {
                btn.classList.remove('active');
            });
            event.target.classList.add('active');
        }

        async function showOrderDetail(orderId) {
            try {
                const response = await fetch(`https://localhost:7001/api/orders/${orderId}`);
                const order = await response.json();

                currentOrderId = orderId;

                const content = `
                    <div class="row">
                        <div class="col-md-6">
                            <h6>Sipariş Bilgileri</h6>
                            <table class="table table-sm">
                                <tr><td>Sipariş No:</td><td>#${order.id}</td></tr>
                                <tr><td>Tarih:</td><td>${new Date(order.orderDate).toLocaleString('tr-TR')}</td></tr>
                                <tr><td>Durum:</td><td><span class="badge ${getStatusBadgeClass(order.status)}">${getStatusText(order.status)}</span></td></tr>
                                <tr><td>Toplam:</td><td><strong>${order.totalAmount.toLocaleString('tr-TR', {style: 'currency', currency: 'TRY'})}</strong></td></tr>
                            </table>
                        </div>
                        <div class="col-md-6">
                            <h6>Müşteri Bilgileri</h6>
                            <table class="table table-sm">
                                <tr><td>Ad Soyad:</td><td>${order.user.firstName} ${order.user.lastName}</td></tr>
                                <tr><td>E-posta:</td><td>${order.user.email}</td></tr>
                                <tr><td>Telefon:</td><td>${order.user.phone || 'Belirtilmemiş'}</td></tr>
                            </table>
                        </div>
                    </div>

                    ${order.shippingAddress ? `
                    <div class="mb-3">
                        <h6>Teslimat Adresi</h6>
                        <p class="bg-light p-2 rounded">${order.shippingAddress}</p>
                    </div>
                    ` : ''}

                    <h6>Sipariş Ürünleri</h6>
                    <div class="table-responsive">
                        <table class="table table-striped">
                            <thead>
                                <tr>
                                    <th>Ürün</th>
                                    <th>Adet</th>
                                    <th>Birim Fiyat</th>
                                    <th>Toplam</th>
                                </tr>
                            </thead>
                            <tbody>
                                ${order.orderItems.map(item => `
                                    <tr>
                                        <td>
                                            <div class="d-flex align-items-center">
                                                ${item.book.imageUrl ? `<img src="${item.book.imageUrl}" alt="${item.book.title}" class="me-2" style="width: 40px; height: 40px; object-fit: cover;">` : '<div class="bg-light me-2 d-flex align-items-center justify-content-center" style="width: 40px; height: 40px;"><i class="fas fa-book text-muted"></i></div>'}
                                                <div>
                                                    <strong>${item.book.title}</strong><br>
                                                    <small class="text-muted">${item.book.author}</small>
                                                </div>
                                            </div>
                                        </td>
                                        <td>${item.quantity}</td>
                                        <td>${item.unitPrice.toLocaleString('tr-TR', {style: 'currency', currency: 'TRY'})}</td>
                                        <td><strong>${item.totalPrice.toLocaleString('tr-TR', {style: 'currency', currency: 'TRY'})}</strong></td>
                                    </tr>
                                `).join('')}
                            </tbody>
                        </table>
                    </div>
                `;

                document.getElementById('orderDetailContent').innerHTML = content;
                new bootstrap.Modal(document.getElementById('orderDetailModal')).show();

            } catch (error) {
                console.error('Error loading order detail:', error);
                alert('Sipariş detayları yüklenirken hata oluştu.');
            }
        }

        async function updateOrderStatus(newStatus) {
            if (!currentOrderId) return;

            try {
                const response = await fetch(`https://localhost:7001/api/orders/${currentOrderId}/status`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(newStatus)
                });

                if (response.ok) {
                    bootstrap.Modal.getInstance(document.getElementById('orderDetailModal')).hide();
                    loadOrders(); // Refresh orders
                    alert('Sipariş durumu başarıyla güncellendi.');
                } else {
                    throw new Error('Durum güncellenemedi');
                }
            } catch (error) {
                console.error('Error updating order status:', error);
                alert('Sipariş durumu güncellenirken hata oluştu.');
            }
        }

        async function quickUpdateStatus(orderId, newStatus) {
            try {
                const response = await fetch(`https://localhost:7001/api/orders/${orderId}/status`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(newStatus)
                });

                if (response.ok) {
                    loadOrders(); // Refresh orders
                    alert('Sipariş durumu başarıyla güncellendi.');
                } else {
                    throw new Error('Durum güncellenemedi');
                }
            } catch (error) {
                console.error('Error updating order status:', error);
                alert('Sipariş durumu güncellenirken hata oluştu.');
            }
        }

        function updateStatistics() {
            const stats = {
                total: allOrders.length,
                pending: allOrders.filter(o => o.status === 'Pending').length,
                processing: allOrders.filter(o => o.status === 'Processing').length,
                delivered: allOrders.filter(o => o.status === 'Delivered').length,
                totalRevenue: allOrders.filter(o => o.status === 'Delivered').reduce((sum, o) => sum + o.totalAmount, 0)
            };

            document.getElementById('orderStats').innerHTML = `
                <div class="col-md-2">
                    <h4 class="text-primary">${stats.total}</h4>
                    <p class="text-muted">Toplam Sipariş</p>
                </div>
                <div class="col-md-2">
                    <h4 class="text-warning">${stats.pending}</h4>
                    <p class="text-muted">Bekleyen</p>
                </div>
                <div class="col-md-2">
                    <h4 class="text-info">${stats.processing}</h4>
                    <p class="text-muted">İşlemde</p>
                </div>
                <div class="col-md-2">
                    <h4 class="text-success">${stats.delivered}</h4>
                    <p class="text-muted">Teslim Edilen</p>
                </div>
                <div class="col-md-4">
                    <h4 class="text-success">${stats.totalRevenue.toLocaleString('tr-TR', {style: 'currency', currency: 'TRY'})}</h4>
                    <p class="text-muted">Toplam Gelir</p>
                </div>
            `;
        }

        function getStatusBadgeClass(status) {
            const classes = {
                'Pending': 'bg-warning',
                'Processing': 'bg-info',
                'Shipped': 'bg-primary',
                'Delivered': 'bg-success',
                'Cancelled': 'bg-danger'
            };
            return classes[status] || 'bg-secondary';
        }

        function getStatusText(status) {
            const texts = {
                'Pending': 'Bekliyor',
                'Processing': 'İşlemde',
                'Shipped': 'Kargoda',
                'Delivered': 'Teslim Edildi',
                'Cancelled': 'İptal Edildi'
            };
            return texts[status] || status;
        }
    </script>
}